; You can adjust speed of the serial port communication by adjusting 'SERIALCOM_SPEED' variable in [env] section
; Also you can force to clear LEDs on the esp8266 start up (-DCLEAR_LEDS=number_of_leds_to_clear)
; The pinout can not be changed for esp8266 board

[env]
extra_scripts = pre:extra_script.py
platform = atmelavr
board = nanoatmega328
framework = arduino
lib_deps = makuna/NeoPixelBus@2.7.0
monitor_speed = 2000000

build_flags = 
    -DSERIALCOM_SPEED=${env.monitor_speed} 
    -DSERIAL_RX_BUFFER_SIZE=512
    ; -DSERIAL_TX_BUFFER_SIZE=256
    -DLED_PIN=2 
    -DCLEAR_LEDS=107

[env:WS2812x_RGB]
build_flags = -DNEOPIXEL_RGBW ${env.build_flags}
custom_prog_version = WS2812x_RGBW

[env:WS2812x_RGBW]
build_flags = -DNEOPIXEL_RGB ${env.build_flags}
custom_prog_version = WS2812x_RGB

; [env:SK6812_RGBW_COLD]
; build_flags = -DNEOPIXEL_RGBW -DCOLD_WHITE ${env.build_flags}
; custom_prog_version = SK6812_RGBW_COLD

; [env:SK6812_RGBW_NEUTRAL]
; build_flags = -DNEOPIXEL_RGBW ${env.build_flags}
; custom_prog_version = SK6812_RGBW_NEUTRAL

; [env:WS281x_RGB]
; build_flags = -DNEOPIXEL_RGB ${env.build_flags}
; custom_prog_version = WS281x_RGB

; [env:SPI_APA102_SK9822_HD107]
; build_flags = -DSPILED_APA102 ${env.build_flags}
; custom_prog_version = SPI_APA102_SK9822_HD107

; [env:SPI_WS2801]
; build_flags = -DSPILED_WS2801 ${env.build_flags}
; custom_prog_version = SPI_WS2801
